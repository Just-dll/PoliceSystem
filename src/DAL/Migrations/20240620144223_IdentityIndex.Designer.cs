// <auto-generated />
using System;
using DAL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AngularApp1.Server.Migrations
{
    [DbContext(typeof(PolicedatabaseContext))]
    [Migration("20240620144223_IdentityIndex")]
    partial class IdentityIndex
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AngularApp1.Server.Models.DrivingLicense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DriverId")
                        .HasColumnType("int")
                        .HasColumnName("driver_id");

                    b.Property<DateOnly>("ExpirationDate")
                        .HasColumnType("date")
                        .HasColumnName("expiration_date");

                    b.Property<DateOnly>("IssueDate")
                        .HasColumnType("date")
                        .HasColumnName("issue_date");

                    b.HasKey("Id")
                        .HasName("PK__driving___3213E83F5F21BAB8");

                    b.HasIndex(new[] { "DriverId" }, "UQ__driving___A411C5BCEA9DB9D2")
                        .IsUnique();

                    b.ToTable("driving_license");
                });

            modelBuilder.Entity("AngularApp1.Server.Models.RegisteredCar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CarOwnerId")
                        .HasColumnType("int")
                        .HasColumnName("car_owner_id");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("color");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("model");

                    b.Property<string>("PlateNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("plate_number");

                    b.Property<DateOnly>("Year")
                        .HasColumnType("date")
                        .HasColumnName("year");

                    b.HasKey("Id")
                        .HasName("PK__register__3213E83F2999EE23");

                    b.HasIndex(new[] { "CarOwnerId" }, "IX_registered_car_car_owner_id");

                    b.HasIndex(new[] { "PlateNumber" }, "UQ__register__87EF9F5903CD33E6")
                        .IsUnique();

                    b.ToTable("registered_car");
                });

            modelBuilder.Entity("AngularApp1.Server.Models.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Fine")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("fine");

                    b.Property<int>("ReportId")
                        .HasColumnType("int")
                        .HasColumnName("report_id");

                    b.Property<int>("ViolatorId")
                        .HasColumnType("int")
                        .HasColumnName("violator_id");

                    b.HasKey("Id")
                        .HasName("PK__ticket__3213E83FE0964E0E");

                    b.HasIndex(new[] { "ReportId" }, "IX_ticket_report_id");

                    b.HasIndex(new[] { "ViolatorId" }, "IX_ticket_violator_id");

                    b.ToTable("ticket");
                });

            modelBuilder.Entity("AngularApp1.Server.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdentityId")
                        .HasColumnType("int")
                        .HasColumnName("IdentityId");

                    b.HasKey("Id")
                        .HasName("PK__user__3213E83F956FB020");

                    b.HasIndex("IdentityId")
                        .IsUnique();

                    b.ToTable("user");
                });

            modelBuilder.Entity("PoliceDAL.Entities.CaseFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CaseFileTypeId")
                        .HasColumnType("int")
                        .HasColumnName("case_file_type_id");

                    b.Property<DateOnly>("SentDate")
                        .HasColumnType("date")
                        .HasColumnName("initation_date");

                    b.HasKey("Id")
                        .HasName("PK_case_file_3002032");

                    b.HasIndex("CaseFileTypeId");

                    b.ToTable("case_file");
                });

            modelBuilder.Entity("PoliceDAL.Entities.CaseFileConnection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CaseFileId")
                        .HasColumnType("int");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CaseFileId");

                    b.HasIndex("PersonId");

                    b.ToTable("case_file_assignation");
                });

            modelBuilder.Entity("PoliceDAL.Entities.CaseFileType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("value");

                    b.HasKey("Id")
                        .HasName("PK_case_file_type");

                    b.ToTable("case_file_type");
                });

            modelBuilder.Entity("PoliceDAL.Entities.Decision", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<DateOnly>("IssueDate")
                        .HasColumnType("date")
                        .HasColumnName("issue_date");

                    b.Property<int>("JudgeId")
                        .HasColumnType("int")
                        .HasColumnName("judge_id");

                    b.HasKey("Id");

                    b.HasIndex("JudgeId");

                    b.ToTable("decision");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("PoliceDAL.Entities.Request", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<DateOnly>("SentDate")
                        .HasColumnType("date")
                        .HasColumnName("initiation_date");

                    b.Property<int>("RequestStatus")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<int>("RequesterId")
                        .HasColumnType("int")
                        .HasColumnName("requester_id");

                    b.HasKey("Id");

                    b.HasIndex("RequesterId");

                    b.ToTable("requests");
                });

            modelBuilder.Entity("Report", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CaseFileId")
                        .HasColumnType("int")
                        .HasColumnName("case_file_id");

                    b.Property<DateOnly>("DateOfIssuing")
                        .HasColumnType("date")
                        .HasColumnName("date_of_issuing");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<int>("IssuerId")
                        .HasColumnType("int")
                        .HasColumnName("issuer_id");

                    b.Property<string>("ReportFileLocation")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("char(250)")
                        .HasColumnName("report_file_location")
                        .IsFixedLength();

                    b.HasKey("Id")
                        .HasName("PK__report__3213E83F90184F01");

                    b.HasIndex("CaseFileId");

                    b.HasIndex(new[] { "IssuerId" }, "IX_report_issuer_id");

                    b.ToTable("report");
                });

            modelBuilder.Entity("PoliceDAL.Entities.Warrant", b =>
                {
                    b.HasBaseType("PoliceDAL.Entities.Decision");

                    b.Property<int>("CaseFileId")
                        .HasColumnType("int")
                        .HasColumnName("case_file_id");

                    b.Property<int>("SuspectId")
                        .HasColumnType("int")
                        .HasColumnName("suspect_id");

                    b.HasIndex("CaseFileId");

                    b.HasIndex("SuspectId");

                    b.ToTable("warrant");
                });

            modelBuilder.Entity("AngularApp1.Server.Models.DrivingLicense", b =>
                {
                    b.HasOne("AngularApp1.Server.Models.User", "Driver")
                        .WithOne("DrivingLicense")
                        .HasForeignKey("AngularApp1.Server.Models.DrivingLicense", "DriverId")
                        .IsRequired()
                        .HasConstraintName("FK_driver_id");

                    b.Navigation("Driver");
                });

            modelBuilder.Entity("AngularApp1.Server.Models.RegisteredCar", b =>
                {
                    b.HasOne("AngularApp1.Server.Models.User", "CarOwner")
                        .WithMany("RegisteredCars")
                        .HasForeignKey("CarOwnerId")
                        .IsRequired()
                        .HasConstraintName("FK_car_owner_ref");

                    b.Navigation("CarOwner");
                });

            modelBuilder.Entity("AngularApp1.Server.Models.Ticket", b =>
                {
                    b.HasOne("Report", "Report")
                        .WithMany("Tickets")
                        .HasForeignKey("ReportId")
                        .IsRequired()
                        .HasConstraintName("FK_ticket_report_id");

                    b.HasOne("AngularApp1.Server.Models.User", "Violator")
                        .WithMany("Tickets")
                        .HasForeignKey("ViolatorId")
                        .IsRequired()
                        .HasConstraintName("FK_ticket_violator");

                    b.Navigation("Report");

                    b.Navigation("Violator");
                });

            modelBuilder.Entity("PoliceDAL.Entities.CaseFile", b =>
                {
                    b.HasOne("PoliceDAL.Entities.CaseFileType", "CaseFileType")
                        .WithMany("CaseFiles")
                        .HasForeignKey("CaseFileTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_case_caseType_");

                    b.Navigation("CaseFileType");
                });

            modelBuilder.Entity("PoliceDAL.Entities.CaseFileConnection", b =>
                {
                    b.HasOne("PoliceDAL.Entities.CaseFile", "CaseFile")
                        .WithMany("CaseFileConnections")
                        .HasForeignKey("CaseFileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AngularApp1.Server.Models.User", "Person")
                        .WithMany("CaseFileConnections")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CaseFile");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("PoliceDAL.Entities.Decision", b =>
                {
                    b.HasOne("AngularApp1.Server.Models.User", "Judge")
                        .WithMany("Decisions")
                        .HasForeignKey("JudgeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Judge");
                });

            modelBuilder.Entity("PoliceDAL.Entities.Request", b =>
                {
                    b.HasOne("AngularApp1.Server.Models.User", "Requester")
                        .WithMany("Requests")
                        .HasForeignKey("RequesterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Requester");
                });

            modelBuilder.Entity("Report", b =>
                {
                    b.HasOne("PoliceDAL.Entities.CaseFile", "CaseFile")
                        .WithMany("Reports")
                        .HasForeignKey("CaseFileId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("AngularApp1.Server.Models.User", "Issuer")
                        .WithMany("Reports")
                        .HasForeignKey("IssuerId")
                        .IsRequired()
                        .HasConstraintName("FK_Issuer_Report_ref");

                    b.Navigation("CaseFile");

                    b.Navigation("Issuer");
                });

            modelBuilder.Entity("PoliceDAL.Entities.Warrant", b =>
                {
                    b.HasOne("PoliceDAL.Entities.CaseFile", "CaseFile")
                        .WithMany("Warrants")
                        .HasForeignKey("CaseFileId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PoliceDAL.Entities.Decision", null)
                        .WithOne()
                        .HasForeignKey("PoliceDAL.Entities.Warrant", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AngularApp1.Server.Models.User", "Suspect")
                        .WithMany("WarrantsOn")
                        .HasForeignKey("SuspectId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CaseFile");

                    b.Navigation("Suspect");
                });

            modelBuilder.Entity("AngularApp1.Server.Models.User", b =>
                {
                    b.Navigation("CaseFileConnections");

                    b.Navigation("Decisions");

                    b.Navigation("DrivingLicense");

                    b.Navigation("RegisteredCars");

                    b.Navigation("Reports");

                    b.Navigation("Requests");

                    b.Navigation("Tickets");

                    b.Navigation("WarrantsOn");
                });

            modelBuilder.Entity("PoliceDAL.Entities.CaseFile", b =>
                {
                    b.Navigation("CaseFileConnections");

                    b.Navigation("Reports");

                    b.Navigation("Warrants");
                });

            modelBuilder.Entity("PoliceDAL.Entities.CaseFileType", b =>
                {
                    b.Navigation("CaseFiles");
                });

            modelBuilder.Entity("Report", b =>
                {
                    b.Navigation("Tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
